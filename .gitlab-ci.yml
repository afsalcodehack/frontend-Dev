stages:
  - test
  - build

image: viperdev/ionic:xenial

variables:
  XDG_CACHE_HOME: "$CI_PROJECT_DIR/.cache/"
  GRADLE_OPTS: -Dorg.gradle.daemon=false
  ANDROID_ARTIFACT_DIR: $CI_PROJECT_DIR/platforms/android/app/build/outputs/apk

cache:
  key: node-pnpm
  paths: &node_lock_cache_paths
    - .pnpm-store

.npm_init: &npm_init |
  export PATH=$CI_PROJECT_DIR/node_modules/.bin:$CI_PROJECT_DIR/.ci/bin:$PATH
  npm set optional false
  npm set production true
  npm set dev true
  rm -rf node_modules
  npm set store $CI_PROJECT_DIR/.pnpm-store
  npm set pnpmfile $CI_PROJECT_DIR/pnpmfile.js
  npm set prefer-frozen-shrinkwrap true
  npm set prefer-offline true
  [ -n "$(which pnpm 2>/dev/null)" ] || npm install -g pnpm
  ln -s $(which pnpm) .ci/bin/npm
  ln -s $(which pnpx) .ci/bin/npx

before_script:
  - ulimit -c unlimited
  - *npm_init
  - pnpm install --no-save
  - change-environment "$CI_COMMIT_REF_NAME"

.collect_artifacts: &collect_artifacts
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    when: always
    paths:
      - www
      - www-dev-backendless
      - $ANDROID_ARTIFACT_DIR
      - core

test:lint:
  image: viperdev/coala-ngx
  stage: test
  cache: {}
  before_script: []
  script: coala --ci --flush-cache --log-level WARNING

build:dev:web:
  <<: *collect_artifacts
  stage: build
  script:
    - change-environment backendless
    - build-www
    - mv www www-dev-backendless
  retry: 2

build:prod:web:
  <<: *collect_artifacts
  stage: build
  script:
    - build-www --prod
  retry: 2
