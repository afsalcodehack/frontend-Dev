// http://ionicframework.com/docs/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

.toolbar-background {
  background: color($colors, primary);
  border-color: none;
  color: color($colors, light);
}

.toolbar-title {
  color: color($colors, light);
}

.bar-button-default {
  color: color($colors, light);
}

.center {
  text-align: center;
}

/* Temp fix from https://github.com/ionic-team/ionic/issues/7204 */
ion-item.item-input {
  padding-left: 0;
}

.description {
  white-space: pre-wrap;
}

.help-button {
  color: color($colors, secondary);
  font-size: 1.3em;
  margin: 0;
  padding: 0;
}

.divide {
  border-bottom: 1px solid color($colors, secondary);
}

.unit-col .item {
  padding-left: 0 !important;
}

.unit-col .select {
  padding: 0;
  padding-right: 5px !important;
}

.slb-text {
  font-size: 0.5em;
}

.img-ion-item {
  padding-left: 0 !important;
  text-align: center;
}

.notes div {
  margin-bottom: 0.4em;
}

.href-title-left {
  color: color($colors, dark);
  float: left;
  text-decoration: none;
}

.href-title-right {
  color: color($colors, dark);
  float: right;
  text-decoration: none;
}

.divider {
  background-color: rgba(66, 65, 65,0.75);
  height: 2px;
}


// Small devices (landscape phones, 235px and up)
@media only screen and (min-width: 235px) {
  ion-navbar {
    margin-top: default;
  }

  .alignment-navbar {
    margin-left: auto;
    margin-right: auto;
    padding: default;
  }

  .alignment-titlebar {
    margin-left: auto;
    margin-right: auto;
    padding: default;
  }

  .ion-content-custom {
    font-size: default;
    line-height: default;
    padding: 16px;
  }

  .toolbar-title {
    font-size: 1.5rem;
  }
}

// Medium devices (tablets, 768px and up)
@media only screen and (min-width: 768px) {
  ion-navbar {
    margin-top: default;
  }

  .alignment-navbar {
    margin-left: auto;
    margin-right: auto;
    padding: default;
  }

  .alignment-titlebar {
    margin-left: auto;
    margin-right: auto;
    padding: default;
  }

  .ion-content-custom {
    font-size: default;
    line-height: default;
    padding: 75px;
  }

  .toolbar-title {
    font-size: 1.5rem;
  }
}

// Large devices (desktops, 992px and up)
@media only screen and (min-width: 992px) {
  .slb-text {
    font-size: 0.8em;
  }

  ion-navbar {
    margin-top: 3.2em;
  }

  .alignment-navbar {
    margin-left: auto;
    margin-right: auto;
    padding-left: 31rem;
    padding-right: 31rem;
  }

  .alignment-titlebar {
    margin-left: auto;
    margin-right: auto;
    padding-bottom: 7.5rem;
    padding-left: 31.5rem;
    padding-right: 31.5rem;
    padding-top: 7.5rem;
  }

  .ion-content-custom {
    font-size: 1.6rem;
    line-height: 1.5;
    padding-bottom: 7.5rem;
    padding-left: 32.5rem;
    padding-right: 32.5rem;
    padding-top: 7.5rem;
  }

  .toolbar-title {
    font-size: 3rem;
  }
}

.navbar {
  align-items: center;
  background-color: color($colors, primary);
  display: flex;
  overflow: hidden;
}

.navbar a {
  color: color($colors, light-grey);
  display: block;
  float: left;
  font-size: 1.6rem;
  padding: 20px 16px;
  text-align: center;
  text-decoration: none;
}

.navbar a:not(.logo-inner):hover {
  background: color($colors, light-grey);
  color: color($colors, dark);
}

.tandc {
  padding-left: 1em;
}

.toolbar-title-md {
  align-items: center;
  display: flex;
}

.logo {
  display: none;
  width: auto;

  a {
    align-items: center;
    display: flex;
    padding: 13px 16px;
  }

  &-text {
    display: none;
    margin-left: 8px;
  }

  &-img {
    display: block;
    height: 35px;
  }
}

ion-navbar.toolbar-ios, ion-title.title-ios {
  // sass-lint:disable-block no-duplicate-properties
  // iOS 11.2 brought the change from ``constant`` to ``env`` function for
  // evaluating constants but older devices still use ``constant``. So, it is
  // neccessary to use duplicate properties, however only one will be picked up
  // based on the iOS version.
  padding-top: constant(safe-area-inset-top);
  padding-top: env(safe-area-inset-top);
}

ion-title {
  .logo {
    margin-right: 10px;
  }
}

.clickable {
  cursor: pointer;
}

.no-text-decor {
  text-transform: none;
}

.opaque {
  opacity: 1.0 !important;
}

.extra-margin-top {
  margin-top: 38px !important;
}

.item-md h3 {
  font-size: 1.17em !important;
  font-weight: bold !important;
}

.item-label-fixed {
  ion-select {
    max-width: none;
    width: 100%;
  }

  ion-input,
  ion-select,
  ion-textarea {
    background-color: color($colors, light-grey);
    position: relative;
  }
}

.item-md.item-label-fixed.item-input.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.item-md.item-label-fixed.item-input.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.list-md .item-input.item-label-fixed.ng-valid.item-input-has-value:not(.input-has-focus):not(.item-input-has-focus):last-child,
.list-md .item-input.item-label-fixed.ng-valid.input-has-value:not(.input-has-focus):not(.item-input-has-focus):last-child {
  border: 0;
  box-shadow: none;

  ion-input, ion-textarea {
    box-shadow: inset -3px 0 0 0 #32db64;
  }
}

.item-label-fixed ion-select.ng-valid {
  box-shadow: inset -3px 0 0 0 #32db64;
}

.item-md.item-input.item-label-fixed.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus) .item-inner,
.list-md .item-input.item-label-fixed.ng-invalid.ng-touched:not(.input-has-focus):not(.item-input-has-focus):last-child {
  border: 0;
  box-shadow: none;

  ion-input, ion-select, ion-textarea {
    box-shadow: inset -3px 0 0 0 color($colors, danger);
  }
}

.item-label-fixed ion-select.ng-invalid {
  box-shadow: inset -3px 0 0 0 color($colors, danger);
}

.item-md.item-input.item-label-fixed.item-input-has-focus .item-inner,
.item-md.item-input.item-label-fixed.input-has-focus .item-inner,
.list-md .item-input.item-label-fixed.item-input-has-focus:last-child,
.list-md .item-input.item-label-fixed.input-has-focus:last-child {
  border: 0;
  box-shadow: none;

  ion-input, ion-select, ion-textarea {
    box-shadow: inset -3px 0 0 0 color($colors, primary);
  }
}

.list-md .item-block.item-label-fixed.item-label-fixed .item-inner {
  border: 0;
  padding: 0;
}

ion-item.item-select.item-label-fixed {
  padding-left: 0;
}

.item-label-fixed .input-wrapper {
  margin-bottom: .5em;
  padding: 0;
  padding-left: 8px;
}

@media only screen and (max-width: 575px) {
  .item-label-fixed {
    ion-input,
    ion-select,
    ion-textarea {
      flex-basis: 100%;
    }

    ion-label[fixed] {
      flex-basis: 100%;
    }

    .input-wrapper {
      flex-wrap: wrap;
    }
  }
}
